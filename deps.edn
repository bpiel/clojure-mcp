{:paths ["src" "resources"]
 :deps {org.clojure/data.json {:mvn/version "2.5.1"}
        nrepl/nrepl {:mvn/version "1.3.1"}
        org.clojure/tools.logging {:mvn/version "1.3.0"}
        org.clojure/tools.cli {:mvn/version "1.1.230"}

        ;; for prompt templating
        pogonos/pogonos {:mvn/version "0.2.1"}

        ;; Clojure source manipulation
        rewrite-clj/rewrite-clj {:mvn/version "1.1.47"}
        dev.weavejester/cljfmt {:mvn/version "0.13.1"}
        clj-kondo/clj-kondo {:mvn/version "2024.03.13"}
        org.clojars.oakes/parinfer {:mvn/version "0.4.0"}

        
        ;; llm ecosystem java libs
        com.fasterxml.jackson.core/jackson-databind {:mvn/version "2.15.2"}
        io.modelcontextprotocol.sdk/mcp {:mvn/version "0.10.0"}
        
        dev.langchain4j/langchain4j {:mvn/version "1.0.1"}
        dev.langchain4j/langchain4j-open-ai {:mvn/version "1.0.1"}
        dev.langchain4j/langchain4j-anthropic {:mvn/version "1.0.1-beta6"}      
        dev.langchain4j/langchain4j-google-ai-gemini {:mvn/version "1.0.1-beta6"}

        ;; in order to use the stdio server you have to handle logging somehow
        ;; org.slf4j/slf4j-nop {:mvn/version "2.0.16"}
        }
 :aliases
 {:uberjar
  {:extra-paths ["dev"]           
   :extra-deps {io.github.clojure/tools.build {:git/tag "v0.9.2" :git/sha "fe6b140"}
                jakarta.servlet/jakarta.servlet-api {:mvn/version "6.1.0"}
                org.eclipse.jetty/jetty-server {:mvn/version "11.0.20"}
                org.eclipse.jetty/jetty-servlet {:mvn/version "11.0.20"}}
   :ns-default build
   :exec-fn build/uberjar}

  :dev-mcp
  {:extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}}
   :extra-paths ["dev" "test"]
   :exec-fn clojure-mcp.main/start-mcp-server
   ;; it needs an nrepl port to talk to
   :exec-args {:port 7888}}

  :mcp
  {:extra-deps {org.slf4j/slf4j-nop {:mvn/version "2.0.16"}}
   :exec-fn clojure-mcp.main/start-mcp-server
   ;; it needs an nrepl port to talk to
   :exec-args {:port 7888}}
  
  :dev-mcp-figwheel
  {:extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}}
   :extra-paths ["dev" "test"]
   :exec-fn clojure-mcp.main-examples.figwheel-main/start-mcp-server
   ;; it needs an nrepl port to talk to
   :exec-args {:port 7888 :figwheel-build "dev"}}

  :mcp-figwheel
  {:extra-deps {org.slf4j/slf4j-nop {:mvn/version "2.0.16"}}
   :exec-fn clojure-mcp.main-examples.figwheel-main/start-mcp-server
   :exec-args {:port 7888 :figwheel-build "dev"}}

  ;; shared shadow and nrepl setup
  :dev-mcp-shadow
  {:extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}}
   :extra-paths ["dev" "test"]
   :exec-fn clojure-mcp.main-examples.shadow-main/start-mcp-server
   ;; it needs an nrepl port to talk to
   :exec-args {:port 7888 :shadow-build "app"}}

  ;; dual shadow and project nrepl setup
  :dev-mcp-shadow-dual
  {:extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}}
   :extra-paths ["dev" "test"]
   :exec-fn clojure-mcp.main-examples.shadow-main/start-mcp-server
   ;; it needs an nrepl port to talk to
   :exec-args {:port 7888 :shadow-build "app" :shadow-port 7889}}
  
  :mcp-shadow
  {:extra-deps {org.slf4j/slf4j-nop {:mvn/version "2.0.16"}}
   :exec-fn clojure-mcp.main-examples.shadow-main/start-mcp-server
   :exec-args {:port 7888 :shadow-build "app"}}
  
  :mcp-sse
  {:extra-deps {;; optional
                ;; org.slf4j/slf4j-nop {:mvn/version "2.0.16"}
                jakarta.servlet/jakarta.servlet-api {:mvn/version "6.1.0"}
                org.eclipse.jetty/jetty-server {:mvn/version "11.0.20"}
                org.eclipse.jetty/jetty-servlet {:mvn/version "11.0.20"}}
   :exec-fn clojure-mcp.sse-main/start-sse-mcp-server

   :exec-args {:port 7888 ;; the nrepl port to connect to
               ;; specify the :mcp-sse-port to listen on
               :mcp-sse-port 8078}}
  
  :nrepl {:extra-paths ["test" "dev" "resources"]
          :extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}}
          ;; See https://nrepl.org/nrepl/installation.html#jvmti
          :jvm-opts ["-Djdk.attach.allowAttachSelf"]
          :main-opts ["-m" "nrepl.cmdline" "--port" "7888"]}

  ;; dev cycle
  :test
  {:extra-paths ["test" "dev"]
   :exec-fn cognitect.test-runner/test
                                        ; :exec-args {:dirs ["test"]} ;; Explicitly specify test directory
   :extra-deps {ch.qos.logback/logback-classic {:mvn/version "1.4.14"}
                org.clojure/test.check {:mvn/version "1.1.1"}
                nrepl/nrepl {:mvn/version "1.3.1"} ;; Add nrepl server for testing
                io.github.cognitect-labs/test-runner
                {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
   :main-opts ["-m" "cognitect.test-runner"]}
  :build {:deps {io.github.clojure/tools.build
                 {:git/tag "v0.9.2" :git/sha "fe6b140"}
                 slipset/deps-deploy {:mvn/version "0.2.0"}}
          :ns-default build}
  :neil {:project {:name clojure-mcp/clojure-mcp}}
  :lint {:deps {clj-kondo/clj-kondo {:mvn/version "2025.02.20"}}
         :main-opts ["-m" "clj-kondo.main" "--lint" "src"]}}}


